{"version":3,"sources":["js/budget.js"],"names":["budgetController","Expense","id","description","value","Income","data","allitem","exp","inc","totals","addItem","type","des","val","newItem","iD","length","push","testing","console","log","UIController","DOMstrings","inputType","inputDescription","inputValue","inputButton","incomeContainer","expensesContainer","getInput","document","querySelector","addListItem","obj","html","newHtml","element","replace","insertAdjacentHTML","getDOMstrings","GlobalController","budgetCtrl","UICtrl","setupEventListeners","ctrlAdditem","input","init","DOM","addEventListener","event","keyCode","which"],"mappings":";AACA,IAAIA,EAAoB,WAGlBC,IAAAA,EAAU,SAASC,EAAIC,EAAaC,GACjCF,KAAAA,GAAKA,EACLC,KAAAA,YAAcA,EACdC,KAAAA,MAAQA,GAGXC,EAAS,SAASH,EAAIC,EAAaC,GAChCF,KAAAA,GAAKA,EACLC,KAAAA,YAAcA,EACdC,KAAAA,MAAQA,GAGXE,EAAO,CACTC,QAAS,CACPC,IAAK,GACLC,IAAK,IAEPC,OAAQ,CACNF,IAAK,EACLC,IAAK,IAIF,MAAA,CAELE,QAAS,SAASC,EAAMC,EAAKC,GACvBC,IAAAA,EAAQC,EAkBLD,OAbLC,EADEV,EAAKC,QAAQK,GAAMK,OAAS,EACzBX,EAAKC,QAAQK,GAAMN,EAAKC,QAAQK,GAAMK,OAAS,GAAGf,GAAK,EAEvD,EAGM,QAATU,EACFG,EAAU,IAAId,EAAQe,EAAIH,EAAKC,GACb,QAATF,IACTG,EAAU,IAAIV,EAAOW,EAAIH,EAAKC,IAGhCR,EAAKC,QAAQK,GAAMM,KAAKH,GAEjBA,GAGTI,QAAS,WACPC,QAAQC,IAAIf,KAnDM,GAwDpBgB,EAAgB,WAEdC,IAAAA,EAAa,CACfC,UAAW,aACXC,iBAAkB,oBAClBC,WAAY,cACZC,YAAa,YACbC,gBAAiB,gBACjBC,kBAAmB,mBAGd,MAAA,CAELC,SAAU,WACD,MAAA,CACLlB,KAAMmB,SAASC,cAAcT,EAAWC,WAAWpB,MACnDD,YAAa4B,SAASC,cAAcT,EAAWE,kBAAkBrB,MACjEA,MAAO2B,SAASC,cAAcT,EAAWG,YAAYtB,QAGzD6B,YAAa,SAASC,EAAKtB,GACrBuB,IAAAA,EAAMC,EAASC,EAEN,QAATzB,GACFyB,EAAUd,EAAWK,gBACrBO,EACE,iSAEFE,EAAUd,EAAWM,kBACrBM,EACE,yUAOJC,GADAA,GADAA,EAAUD,EAAKG,QAAQ,OAAQJ,EAAIlB,KACjBsB,QAAQ,gBAAiBJ,EAAI/B,cAC7BmC,QAAQ,UAAWJ,EAAI9B,OAGzC2B,SAASC,cAAcK,GAASE,mBAAmB,YAAaH,IAIlEI,cAAe,WACNjB,OAAAA,IA7CO,GAqDhBkB,EAAoB,SAASC,EAAYC,GAEvCC,IAiBAC,EAAc,WACZC,IAAAA,EAAO/B,EAIX+B,EAAQH,EAAOb,WAEff,EAAU2B,EAAW/B,QAAQmC,EAAMlC,KAAMkC,EAAM3C,YAAa2C,EAAM1C,OAElEuC,EAAOV,YAAYlB,EAAS+B,EAAMlC,OAM7B,MAAA,CACLmC,KAAM,WAjCkB,IACpBC,EAiCF5B,QAAQC,IAAI,2BAjCV2B,EAAML,EAAOH,gBAEjBT,SACGC,cAAcgB,EAAIrB,aAClBsB,iBAAiB,QAASJ,GAE7Bd,SAASkB,iBAAiB,WAAY,SAASC,GAEvB,KAAlBA,EAAMC,SAAkC,KAAhBD,EAAME,OAChCP,QAZgB,CAyCrB7C,EAAkBsB,GAErBmB,EAAiBM","file":"budget.d089779d.js","sourceRoot":"..","sourcesContent":["//Clouser\r\nvar budgetController = (function() {\r\n  //Do some code\r\n  // This is the exmpensevalues we atribute a ID , Description and value\r\n  var Expense = function(id, description, value) {\r\n    this.id = id;\r\n    this.description = description;\r\n    this.value = value;\r\n  };\r\n  // This is the income values we atribute a ID , Description and value\r\n  var Income = function(id, description, value) {\r\n    this.id = id;\r\n    this.description = description;\r\n    this.value = value;\r\n  };\r\n  // We use this obj to store our data and values exp and inc\r\n  var data = {\r\n    allitem: {\r\n      exp: [],\r\n      inc: []\r\n    },\r\n    totals: {\r\n      exp: 0,\r\n      inc: 0\r\n    }\r\n  };\r\n  // the budgetController return a metod add item\r\n  return {\r\n    // This method take 3 parameters type des and val.\r\n    addItem: function(type, des, val) {\r\n      var newItem,iD;\r\n      // Create new ID\r\n      // ID = last ID +1\r\n      // this is the logic of ID, the ID always be calculate based on array legnth\r\n      if (data.allitem[type].length > 0) {\r\n        iD = data.allitem[type][data.allitem[type].length - 1].id + 1;\r\n      } else {\r\n        iD = 0;\r\n      }\r\n      // Create new item based on inc  or exp type\r\n      if (type === \"exp\") {\r\n        newItem = new Expense(iD, des, val);\r\n      } else if (type === \"inc\") {\r\n        newItem = new Income(iD, des, val);\r\n      }\r\n      // Push it into our data structure\r\n      data.allitem[type].push(newItem);\r\n      // Return the new element\r\n      return newItem;\r\n    },\r\n    // We can use this method to test our code data\r\n    testing: function() {\r\n      console.log(data);\r\n    }\r\n  };\r\n})();\r\n// The Ui controller controls everthing in the UI for now we just get a DOM values and put inside a obj to make\r\nvar UIController = (function() {\r\n  // Crete a variable to store string, because if we want to change some class we just need to change the name of variable.\r\n  var DOMstrings = {\r\n    inputType: \".add__type\",\r\n    inputDescription: \".add__description\",\r\n    inputValue: \".add__value\",\r\n    inputButton: \".add__btn\",\r\n    incomeContainer: \".income__list\",\r\n    expensesContainer: \".expenses__list\"\r\n  };\r\n\r\n  return {\r\n    // Method to return 3 values\r\n    getInput: function() {\r\n      return {\r\n        type: document.querySelector(DOMstrings.inputType).value, // income ande exp values\r\n        description: document.querySelector(DOMstrings.inputDescription).value,\r\n        value: document.querySelector(DOMstrings.inputValue).value\r\n      };\r\n    },\r\n    addListItem: function(obj, type) {\r\n      var html, newHtml, element;\r\n      // create HTML string with placeholder text\r\n      if (type === \"inc\") {\r\n        element = DOMstrings.incomeContainer;\r\n        html =\r\n          '<div class=\"item clearfix\" id=\"income-%iD%\"><div class=\"item__description\">%description%</div><div class=\"right clearfix\"><div class=\"item__value\">%value%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';\r\n      } else {\r\n        element = DOMstrings.expensesContainer;\r\n        html =\r\n          '<div class=\"item clearfix\" id=\"expense-%iD%\"><div class=\"item__description\">%description%</div> <div class=\"right clearfix\"><div class=\"item__value\">%value%</div><div class=\"item__percentage\">21%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';\r\n      }\r\n\r\n      // Replace the placholder text with some actual data.\r\n\r\n      newHtml = html.replace(\"%iD%\", obj.iD);\r\n      newHtml = newHtml.replace(\"%description%\", obj.description);\r\n      newHtml = newHtml.replace(\"%value%\", obj.value);\r\n\r\n      // insert the html into the DOM\r\n      document.querySelector(element).insertAdjacentHTML(\"beforeend\", newHtml);\r\n    },\r\n    // Expose DOMstrings to public to be acessable in other part of code\r\n    // Replace() --> search for string and replace for anther thing\r\n    getDOMstrings: function() {\r\n      return DOMstrings;\r\n    }\r\n  };\r\n})();\r\n\r\n// this mix UI and Budget controler in a single function\r\n// GlobalController is the main function IIFE, this recive two Parameters  budgetController, UIController\r\n\r\nvar GlobalController = (function(budgetCtrl, UICtrl) {\r\n  // Initialize event Listeners just it\r\n  var setupEventListeners = function() {\r\n    var DOM = UICtrl.getDOMstrings();\r\n\r\n    document\r\n      .querySelector(DOM.inputButton)\r\n      .addEventListener(\"click\", ctrlAdditem);\r\n\r\n    document.addEventListener(\"keypress\", function(event) {\r\n      // event.wich is most commum then keycode\r\n      if (event.keyCode === 13 || event.which === 13) {\r\n        ctrlAdditem();\r\n      }\r\n    });\r\n  };\r\n\r\n  // Fuction to add a item\r\n  // This Function adds a item and\r\n  var ctrlAdditem = function() {\r\n    var input, newItem;\r\n    // 1. Get the filed input data\r\n    //getInput is the public method inside a IIFE\r\n    // we just get the DOM manipulator and put inside a variable\r\n    input = UICtrl.getInput();\r\n    // 2. Add the item to the budget controller\r\n    newItem = budgetCtrl.addItem(input.type, input.description, input.value);\r\n    //3. Add the new item to the UI\r\n    UICtrl.addListItem(newItem, input.type);\r\n    //4. Calculate the budget\r\n    //5. Display the budget on the UI\r\n  };\r\n\r\n  // Place to initializate ower code\r\n  return {\r\n    init: function() {\r\n      console.log(\"Aplication has started \");\r\n      setupEventListeners();\r\n    }\r\n  };\r\n  //ctrlAdditem --> is a callback for add item\r\n})(budgetController, UIController);\r\n\r\nGlobalController.init();\r\n"]}